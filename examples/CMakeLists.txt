# generated by generate-cmakelists.sh
cmake_minimum_required (VERSION 3.0)
project (gmt-examples)
include_directories(..)

find_package(OpenGL REQUIRED)
find_package(glfw3 REQUIRED)
find_package(OpenCV REQUIRED)

add_executable(00-orientation ./00-orientation.cpp)
target_link_libraries(00-orientation ${OPENGL_gl_LIBRARY} glfw ${OpenCV_LIBS})

add_executable(01-reflex ./01-reflex.cpp)
target_link_libraries(01-reflex ${OPENGL_gl_LIBRARY} glfw ${OpenCV_LIBS})

add_executable(02-intersect ./02-intersect.cpp)
target_link_libraries(02-intersect ${OPENGL_gl_LIBRARY} glfw ${OpenCV_LIBS})

add_executable(03-ear ./03-ear.cpp)
target_link_libraries(03-ear ${OPENGL_gl_LIBRARY} glfw ${OpenCV_LIBS})

add_executable(04-classify ./04-classify.cpp)
target_link_libraries(04-classify ${OPENGL_gl_LIBRARY} glfw ${OpenCV_LIBS})

add_executable(05-mouth ./05-mouth.cpp)
target_link_libraries(05-mouth ${OPENGL_gl_LIBRARY} glfw ${OpenCV_LIBS})

add_executable(06-triangle-spinning ./06-triangle-spinning.cpp)
target_link_libraries(06-triangle-spinning ${OPENGL_gl_LIBRARY} glfw ${OpenCV_LIBS})

add_executable(07-point-in-polygon ./07-point-in-polygon.cpp)
target_link_libraries(07-point-in-polygon ${OPENGL_gl_LIBRARY} glfw ${OpenCV_LIBS})

add_executable(08-dcel ./08-dcel.cpp)
target_link_libraries(08-dcel ${OPENGL_gl_LIBRARY} glfw ${OpenCV_LIBS})

add_executable(09-visibility ./09-visibility.cpp)
target_link_libraries(09-visibility ${OPENGL_gl_LIBRARY} glfw ${OpenCV_LIBS})

add_executable(10-image ./10-image.cpp)
target_link_libraries(10-image ${OPENGL_gl_LIBRARY} glfw ${OpenCV_LIBS})

